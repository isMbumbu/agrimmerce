<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Payment Form</title>
  <style>
    .container {
      max-width: 800px;
      margin: auto;
      background-color: white;
      padding: 20px;
      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    }
    .section {
      margin-bottom: 20px;
    }
    .section-title {
      font-size: 18px;
      font-weight: bold;
      margin-bottom: 10px;
    }
    .section-content {
      border: 1px solid #ddd;
      padding: 15px;
      background-color: #fff;
    }
    .order-summary, .payment-method {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .order-summary {
      border-bottom: 1px solid #ddd;
      padding-bottom: 15px;
      margin-bottom: 15px;
    }
    .total {
      font-size: 20px;
      font-weight: bold;
    }
    .btn {
      display: inline-block;
      padding: 10px 20px;
      background-color: orange;
      color: white;
      text-align: center;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      text-decoration: none;
    }
    .btn:hover {
      background-color: darkorange;
    }
    .payment-form, .mpesa-form, .complete-purchase {
      display: none; /* Hide forms by default */
      margin-top: 20px;
      padding: 20px;
      border: 1px solid #ddd;
      border-radius: 5px;
      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    }
    .payment-form label,
    .mpesa-form label {
      display: block;
      margin-top: 10px;
    }
    .payment-form input[type="text"],
    .payment-form input[type="number"],
    .mpesa-form input[type="text"] {
      width: 100%;
      padding: 8px;
      border: 1px solid #ccc;
      border-radius: 5px;
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }
    .payment-form input[type="submit"],
    .mpesa-form input[type="submit"],
    .complete-purchase input[type="button"] {
      width: 100%;
      padding: 10px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      margin-top: 10px;
    }
    .payment-form input[type="submit"]:hover,
    .mpesa-form input[type="submit"]:hover,
    .complete-purchase input[type="button"]:hover {
      background-color: #3e8e41;
    }
    /* Customer Name Section */
    .customer-name {
      text-align: center;
      font-size: 24px;
      font-weight: bold;
      margin-bottom: 20px;
    }
    .product-list {
      margin-top: 20px;
    }
    .product-item {
      display: flex;
      justify-content: space-between;
      padding: 10px;
      border-bottom: 1px solid #ddd;
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- Customer Name -->
    <div class="customer-name">
      <span id="customer-name-display">Customer Name</span>
    </div>

    <!-- Order Summary -->
    <div class="section order-summary">
      <div class="section-title">Order Summary</div>
      <div class="section-content">
        <div id="product-list" class="product-list">
          <!-- Products will be listed here -->
        </div>
        <p>Items Total: <span id="display-total-price">KSh -</span></p>
        <p>Delivery Fees: <span>KSh 150</span></p>
        <div class="total">Total: <span id="display-total-price-total">KSh -</span></div>
      </div>
    </div>

    <!-- Delivery Details -->
    <div class="section">
      <div class="section-title">Delivery Details</div>
      <div class="section-content">
        <p>Delivery Method: Door Delivery</p>
        <p>Delivery Date: -</p>
      </div>
    </div>

    <!-- Payment Method -->
    <div class="section">
      <div class="section-title">Payment Method</div>
      <div class="section-content">
        <p><input type="radio" id="payMpesa" name="paymentMethod" value="mpesa"> Pay now with M-Pesa</p>
        <p><input type="radio" id="payCard" name="paymentMethod" value="card"> Pay with Credit/Debit Card</p>
        <p><input type="radio" id="payDelivery" name="paymentMethod" value="delivery"> Pay on Delivery</p>
      </div>
    </div>

<!-- M-Pesa Form -->
<div class="mpesa-form" id="mpesaForm">
  <form action="/payment/mpesa" method="POST">
    <!-- Include productIds -->
    <input type="hidden" name="productIds" id="productIds-mpesa" value="">

    <!-- other fields -->
    <label for="mpesaNumber">M-Pesa Number:</label>
    <input type="text" id="mpesaNumber" name="mpesaNumber" inputmode="numeric" pattern="[0-9]*" required>

    <input type="hidden" id="total-price-mpesa" name="totalPrice" value="0">
    <p>Total Price: KSh <span id="display-total-price-mpesa">-</span></p>
    <!-- Include customerName in the form -->
    <input type="hidden" id="customerName-mpesa" name="customerName" value="">

    <input type="submit" value="Submit M-Pesa Payment">
  </form>
</div>

<!-- Payment Form -->
<div class="payment-form" id="paymentForm">
  <form action="/payment/card" method="POST">
    <!-- Include productIds -->
    <input type="hidden" name="productIds" id="productIds-card" value="">

    <!-- other fields -->
    <label for="nameOnCard">Name on Card:</label>
    <input type="text" id="nameOnCard" name="nameOnCard" required>

    <label for="cardNumber">Card Number:</label>
    <input type="text" id="cardNumber" name="cardNumber" inputmode="numeric" pattern="[0-9]*" required>

    <label for="expiryDate">Expiry Date:</label>
    <input type="text" id="expiryDate" name="expiryDate" required>

    <label for="cvc">CVC:</label>
    <input type="text" id="cvc" name="cvc" inputmode="numeric" pattern="[0-9]*" required>

    <input type="hidden" id="total-price-card" name="totalPrice" value="0">
    <p>Total Price: KSh <span id="display-total-price-card">-</span></p>
    <!-- Include customerName in the form -->
    <input type="hidden" id="customerName-card" name="customerName" value="">

    <input type="submit" value="Submit Payment">
  </form>
</div>

<!-- Complete Purchase Button (For Pay on Delivery) -->
<div class="complete-purchase" id="completePurchase">
  <form action="/payment/delivery" method="POST">
    <!-- Include productIds -->
    <input type="hidden" name="productIds" id="productIds-delivery" value="">

    <!-- other fields -->
    <!-- Include customerName in the form -->
    <input type="hidden" id="customerName-delivery" name="customerName" value="">

    <input type="hidden" id="total-price-delivery" name="totalPrice" value="0">
    <input type="button" value="Complete Purchase" onclick="document.querySelector('form').submit();">
  </form>
</div>


    <!-- Complete Purchase Button (For Pay on Delivery) -->
    <div class="complete-purchase" id="completePurchase">
      <form action="/payment/delivery" method="POST">
        <!-- Include customerName in the form -->
        <input type="hidden" id="customerName-delivery" name="customerName" value="">

        <input type="hidden" id="total-price-delivery" name="totalPrice" value="0">
        <input type="hidden" id="customer-name-delivery" name="customerName" value="">
        <input type="button" value="Complete Purchase" onclick="document.querySelector('form').submit();">
      </form>
    </div>
  </div>

<script>
  // Function to get query parameters from the URL
  function getQueryParam(param) {
    const urlParams = new URLSearchParams(window.location.search);
    return urlParams.get(param);
  }

  window.onload = function() {
    const totalPrice = getQueryParam('totalPrice');
    const productNames = getQueryParam('productNames');
    const productPrices = getQueryParam('productPrices');

    console.log('Total Price from URL:', totalPrice);  // Debugging line
    console.log('Product Names from URL:', productNames);  // Debugging line
    console.log('Product Prices from URL:', productPrices);  // Debugging line

    if (totalPrice && productNames && productPrices) {
        // Split product names and prices into arrays
        const productNamesArray = productNames.split(',').map(name => decodeURIComponent(name));
        const productPricesArray = productPrices.split(',').map(price => price.replace('sh', ''));

        // Calculate total price
        const productTotalPrice = productPricesArray.reduce((total, price) => total + parseFloat(price), 0);
        const deliveryFee = 150; // Delivery fee
        const totalPriceValue = productTotalPrice + deliveryFee;

        // Display product details
        const productList = document.getElementById('product-list');

        productList.innerHTML = productNamesArray.map((name, index) =>
            `<div class="product-item">
              <span>Product: ${name}</span>
              <span>Price: sh${productPricesArray[index]}</span>
            </div>`).join('');

        // Update displayed prices
        document.getElementById('display-total-price').innerText = `KSh ${productTotalPrice}`;
        document.getElementById('display-total-price-total').innerText = `KSh ${totalPriceValue}`;
        document.getElementById('display-total-price-mpesa').innerText = `KSh ${totalPriceValue}`;
        document.getElementById('display-total-price-card').innerText = `KSh ${totalPriceValue}`;

        // Update hidden fields
        document.getElementById('total-price-mpesa').value = totalPriceValue;
        document.getElementById('total-price-card').value = totalPriceValue;
        document.getElementById('total-price-delivery').value = totalPriceValue;
        document.getElementById('customerName-mpesa').value = document.getElementById('customer-name-display').innerText;
        document.getElementById('customerName-card').value = document.getElementById('customer-name-display').innerText;
        document.getElementById('customerName-delivery').value = document.getElementById('customer-name-display').innerText;
    } else {
        console.error("Total price, product names, or product prices not found in URL");
    }
};

  // Function to fetch username from the server
  function fetchUsername() {
    fetch('/api/username')
      .then(response => response.json())
      .then(data => {
        if (data.username) {
          document.getElementById('customer-name-display').innerText = data.username;
          // Set the hidden fields with the customer name
          document.getElementById('customer-name-delivery').value = data.username;
        } else {
          console.error('Username not found in response');
        }
      })
      .catch(error => console.error('Error fetching username:', error));
  }
fetchUsername();
document.addEventListener('DOMContentLoaded', function () {
  // Show the form based on the selected payment method
  document.querySelectorAll('input[name="paymentMethod"]').forEach(radio => {
    radio.addEventListener('change', function () {
      // Hide all forms
      document.querySelectorAll('.payment-form, .mpesa-form, .complete-purchase').forEach(form => {
        form.style.display = 'none';
      });

      // Show the selected form
      const selectedValue = document.querySelector('input[name="paymentMethod"]:checked').value;
      if (selectedValue === 'mpesa') {
        document.getElementById('mpesaForm').style.display = 'block';
      } else if (selectedValue === 'card') {
        document.getElementById('paymentForm').style.display = 'block';
      } else if (selectedValue === 'delivery') {
        document.getElementById('completePurchase').style.display = 'block';
      }
    });
  });
});
// Function to handle form submission
function submitOrder() {
  const customerName = document.getElementById('customer-name-display').innerText;
  const totalPrice = parseInt(document.getElementById('display-total-price-total').innerText.replace('KSh ', ''));
  const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;
  const nameOnCard = document.getElementById('nameOnCard') ? document.getElementById('nameOnCard').value : '';
  const cardNumber = document.getElementById('cardNumber') ? document.getElementById('cardNumber').value : '';
  const expiryDate = document.getElementById('expiryDate') ? document.getElementById('expiryDate').value : '';
  const cvc = document.getElementById('cvc') ? document.getElementById('cvc').value : '';
  const mpesaNumber = document.getElementById('mpesaNumber') ? document.getElementById('mpesaNumber').value : '';
  const productIds = [ /* List of product IDs */ ]; // Replace with actual product IDs

  fetch('/place-order', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      customerName,
      totalPrice,
      paymentMethod,
      nameOnCard,
      cardNumber,
      expiryDate,
      cvc,
      mpesaNumber,
      productIds
    })
  })
  .then(response => response.json())
  .then(data => {
    console.log('Order placed successfully:', data);
    // Handle success (e.g., redirect or show a confirmation message)
  })
  .catch(error => console.error('Error placing order:', error));
}


</script>
</body>
</html>
